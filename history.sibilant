(meta (assign sibilant.dir "/home/aaron/devel/tower/libs/kits/kit-http/tests/") null)(add-to-module-lookup"/home/aaron/devel/tower/libs/kits/kit-http/tests/")

(include "kit/header")
(import-namespace kit)
(require! 'sibilant)

(include "kit-events/header")
(include "../src/index")

(include "../meta")
(import-namespace http)

(var PORT 8000)

(define hello Http.Middle-ware)
(.init hello)

(.use hello "world" (=> ((lit request response)) (.end response "hello world")))


(define app Http.Middle-ware)
(.init app)
(.use app "/hello" hello)
(.use app "/test" (=> ((lit request response)) (.end response "test")))

(define server Http.Server (port PORT))

(.init server)
(.use server app)
(.start server)


(def-promised Http.get (config)
  (.on (.get http config success) 'error fail))

(pipe (.get Http "http://localhost:8000/hello")
      (.then Read-stream.drain)
      (.then (aprint "result")))


(with-http-route (app "/http/route/test")
  (.end response "a macro generated this route")
  )
(pipe (.get Http "http://localhost:8000/http/route/test")
      (.then Read-stream.drain)
      (.then (aprint "result")))
(meta (assign sibilant.dir  "./") null)
